[{"/home/kenzo/Desktop/rgb-wallet/web/src/index.js":"1","/home/kenzo/Desktop/rgb-wallet/web/src/App.js":"2","/home/kenzo/Desktop/rgb-wallet/web/src/routes.js":"3","/home/kenzo/Desktop/rgb-wallet/web/src/pages/User/index.js":"4","/home/kenzo/Desktop/rgb-wallet/web/src/pages/Login/index.js":"5","/home/kenzo/Desktop/rgb-wallet/web/src/pages/Admin/index.js":"6","/home/kenzo/Desktop/rgb-wallet/web/src/components/Header/index.js":"7","/home/kenzo/Desktop/rgb-wallet/web/src/components/CustomToggle/index.js":"8","/home/kenzo/Desktop/rgb-wallet/web/src/components/ModalForm/index.js":"9","/home/kenzo/Desktop/rgb-wallet/web/src/components/UserCard/index.js":"10","/home/kenzo/Desktop/rgb-wallet/web/src/components/ContextAwareToggle/index.js":"11"},{"size":249,"mtime":1611433223903,"results":"12","hashOfConfig":"13"},{"size":246,"mtime":1612037735567,"results":"14","hashOfConfig":"13"},{"size":698,"mtime":1612033062279,"results":"15","hashOfConfig":"13"},{"size":2767,"mtime":1611865755823,"results":"16","hashOfConfig":"13"},{"size":2849,"mtime":1611865672210,"results":"17","hashOfConfig":"13"},{"size":5090,"mtime":1612037135883,"results":"18","hashOfConfig":"13"},{"size":1690,"mtime":1611608910088,"results":"19","hashOfConfig":"13"},{"size":563,"mtime":1611531326415,"results":"20","hashOfConfig":"13"},{"size":270,"mtime":1612037878630,"results":"21","hashOfConfig":"13"},{"size":5024,"mtime":1611843924841,"results":"22","hashOfConfig":"13"},{"size":614,"mtime":1611713908396,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ta0kj",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"33"},"/home/kenzo/Desktop/rgb-wallet/web/src/index.js",[],"/home/kenzo/Desktop/rgb-wallet/web/src/App.js",[],"/home/kenzo/Desktop/rgb-wallet/web/src/routes.js",["53","54"],"/home/kenzo/Desktop/rgb-wallet/web/src/pages/User/index.js",["55","56"],"import React, { useState, useEffect } from \"react\";\n\nimport \"./styles.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { FaAngleDown } from \"react-icons/fa\";\n\nimport Header from \"../../components/Header/index\";\nimport CustomToggle from \"../../components/CustomToggle/index\";\n\nimport { Button, Table, Accordion } from \"react-bootstrap/\";\n\nexport default function User() {\n  const [saldo, setSaldo] = useState(1030.5); // MUDAR ASSIM QUE ESTIVER FUNCIONANDO!\n\n  return (\n    <div id=\"user-page\">\n      <div className=\"content-wrapper\">\n        <Header />\n        <div className=\"body-wrapper\">\n          <div className=\"wallet-wrapper\">\n            <div className=\"current-balance\">\n              <h2>Saldo Atual</h2>\n              <h1>R$ {saldo}</h1>\n            </div>\n\n            <div className=\"transaction-history-wrapper\">\n              <Accordion defaultActiveKey=\"0\">\n                <CustomToggle eventKey=\"1\">\n                  Histório de Transações <FaAngleDown />\n                </CustomToggle>\n\n                <Accordion.Collapse eventKey=\"1\">\n                  <div className=\"custom-table\">\n                    <Table striped responsive bordered hover size=\"sm\">\n                      <thead>\n                        <tr>\n                          <th>#</th>\n                          <th>Valor</th>\n                          <th>Data</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td>1</td>\n                          <td>$400,00</td>\n                          <td>05/10/19</td>\n                        </tr>\n                        <tr>\n                          <td>2</td>\n                          <td>$400,00</td>\n                          <td>14/12/20</td>\n                        </tr>\n                        <tr>\n                          <td>3</td>\n                          <td>$500,00</td>\n                          <td>14/12/20</td>\n                        </tr>\n                        <tr>\n                          <td>4</td>\n                          <td>$9900,00</td>\n                          <td>23/12/20</td>\n                        </tr>\n                      </tbody>\n                    </Table>\n                  </div>\n                </Accordion.Collapse>\n              </Accordion>\n            </div>\n\n            <div className=\"user-buttons\">\n              <Button className=\"custom-btn\" id=\"solicitar\" variant=\"primary\">\n                Imprimir Extrato\n              </Button>{\" \"}\n              <Button className=\"custom-btn\" id=\"extrato\" variant=\"warning\">\n                Requisitar $\n              </Button>{\" \"}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n",["57","58"],"/home/kenzo/Desktop/rgb-wallet/web/src/pages/Login/index.js",["59","60","61","62"],"import axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\n// import { FaArrowRight } from 'react-icons/fa';\n\nimport logoImg from \"../../assets/images/login-logo.svg\";\n\nimport \"./styles.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Swal from \"sweetalert2\";\nimport { Button, Form, Accordion } from \"react-bootstrap/\";\nimport CustomToggle from \"../../components/CustomToggle/index\";\n\n/**\n * simple onclick-triggered function that shows an alert\n */\nfunction ForgotPassword() {\n  Swal.fire({\n    icon: \"error\",\n    title: \"Oops...\",\n    text: \"Deu Mer**!\",\n    footer: `<a href='https://www.youtube.com/watch?v=dQw4w9WgXcQ&ab_channel=RickAstleyVEVO'>Por que estou vendo isso?</a>`,\n  });\n}\n\nasync function handleLogin(e) {\n\n  try {\n    console.log(\"only a sketch of the handle the login form\");\n    \n  } catch (e) {\n    await Swal.fire(\"Erro no Login\", `Detalhes=${e.message}`, \"error\");\n  }\n}\n\nexport default function Login() {\n  return (\n    <div id=\"login-page\">\n      <div className=\"content-wrapper\">\n        <div className=\"logo-portion\">\n          <img src={logoImg} alt=\"logo RGBWallet\" />\n\n          <p>Programmed with ♡ by @Muramatsu2602 and @benetche.</p>\n        </div>\n        <div className=\"form-portion\">\n          <h1>Login</h1>\n\n          <Form onSubmit={(e) => handleLogin(e)}>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label className=\"custom-lbl\">Nome</Form.Label>\n              <Form.Control\n                className=\"custom-input\"\n                type=\"email\"\n                placeholder=\"Digite seu nome\"\n              />\n              <Form.Text className=\"text-muted\"></Form.Text>\n            </Form.Group>\n\n            <Accordion defaultActiveKey=\"0\">\n              <CustomToggle eventKey=\"1\">Sou Admin</CustomToggle>\n\n              <Accordion.Collapse eventKey=\"1\">\n                <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Label className=\"custom-lbl\">Senha</Form.Label>\n                  <Form.Control\n                    className=\"custom-input\"\n                    type=\"password\"\n                    placeholder=\"Digite sua senha\"\n                  />\n                </Form.Group>\n              </Accordion.Collapse>\n            </Accordion>\n\n            <div className=\"form-buttons\">\n              {/* This will change soon  \n                 - this button will redirect to either: User or Admin pages\n              */}\n\n              <Link to=\"/user\" className=\"enter-app\">\n                <Button className=\"custom-btn\" variant=\"primary\" type=\"submit\">\n                  Entrar\n                </Button>{\" \"}\n              </Link>\n\n              <a onClick={ForgotPassword}>Esqueci a senha...</a>\n            </div>\n          </Form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/kenzo/Desktop/rgb-wallet/web/src/pages/Admin/index.js",["63","64"],"import React, { useState, useEffect } from \"react\";\nimport Swal from \"sweetalert2\";\n\nimport \"./styles.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport MagnifyingGlass from \"../../assets/images/magnifying-glass-1.svg\";\nimport AddMoneyPic from \"../../assets/images/adicionar-credito.svg\";\nimport CreateUserPic from \"../../assets/images/cadastrar-usuario.svg\";\nimport EraseMoney from \"../../assets/images/no-money.svg\";\n\nimport Header from \"../../components/Header/index\";\nimport UserCard from \"../../components/UserCard/index\";\nimport ModalForm from \"../../components/ModalForm/index\";\n\nimport { Form, InputGroup, FormControl, Button } from \"react-bootstrap/\";\n\n/**\n * Cadastrar Usuario button alert\n * @param {*} e\n */\nasync function confirmAddUser(e) {\n  // TODO: add a big modal here or a huge-ass alert\n  return (<ModalForm/>)\n}\n\n/**\n * Adicionar Credito button alert\n * @param {*} e\n */\nasync function confirmAddCred(e) {\n  Swal.fire({\n    allowOutsideClick: false,\n    title: \"Adicionar Crédito\",\n    html: `<input type=\"number\" id=\"credito\" class=\"swal2-input\"  placeholder=\"Insira um valor em R$\">\n          `,\n    showCancelButton: true,\n    confirmButtonText: \"Adicionar!\",\n    cancelButtonText: \"Nem!\",\n    cancelButtonColor: \"#d33\",\n    focusConfirm: false,\n    preConfirm: () => {\n      const credito = Swal.getPopup().querySelector(\"#credito\").value;\n      if (!credito) {\n        Swal.showValidationMessage(`Por Favor insira um valor!`);\n      }\n      return { credito: credito };\n    },\n  }).then((result) => {\n    if (result.isConfirmed) {\n      Swal.fire({\n        title: \"Crédito Adicionado com Sucesso!\",\n        text: \"Todos os usuários receberão a quantia escolhida\",\n        imageUrl:\n          \"https://i.pinimg.com/originals/7e/f0/3b/7ef03bc1737fdcd05cbd8f02e9b0be86.gif\",\n        imageWidth: 400,\n        imageHeight: 200,\n        imageAlt: \"Burning Money...\",\n      });\n\n      //  this.myMethod(); // this should execute now\n    }\n  });\n}\n\n/**\n * Zerar credito confirmation button Alert\n * @param {*} e\n */\nasync function confirmZeraCred(e) {\n  Swal.fire({\n    allowOutsideClick: false,\n    title: `Zerar Crédito`,\n    text: `Deseja mesmo zerar o crédito de TODOS os usuários?`,\n    icon: \"error\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Sim!\",\n    cancelButtonText: \"Cancelar!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      Swal.fire({\n        title: \"Crédito Zerado com Sucesso!\",\n        text: \"LET IT BUUURN!!!!\",\n        imageUrl:\n          \"https://thumbs.gfycat.com/CheerfulEllipticalEstuarinecrocodile-max-1mb.gif\",\n        imageWidth: 400,\n        imageHeight: 200,\n        imageAlt: \"Burning Money...\",\n      });\n\n      //  this.myMethod(); // this should execute now\n    }\n  });\n}\n\nexport default function Admin() {\n  return (\n    <div id=\"admin-page\">\n      <div className=\"content-wrapper\">\n        <Header />\n        {/* Make search bar a component too? */}\n        <div className=\"navbar-wrapper sticky\">\n          <div className=\"search-bar\">\n            <Form inline>\n              <InputGroup>\n                <FormControl\n                  className=\"custom-input\"\n                  placeholder=\"Pesquisar...\"\n                  aria-label=\"Username\"\n                  aria-describedby=\"basic-addon1\"\n                />\n              </InputGroup>\n              <Button className=\"custom-btn \" id=\"btn_search\" type=\"submit\">\n                <img src={MagnifyingGlass} alt=\"search arrow\" />\n              </Button>\n            </Form>\n          </div>\n\n          <div className=\"control-buttons\">\n            <Button\n              className=\"custom-btn \"\n              id=\"btnCadUser\"\n              onClick={(e) => confirmAddUser(e)}\n              variant=\"primary\"\n            >\n              Cadastrar Usuário\n              <img src={CreateUserPic} alt=\"search arrow\" />\n            </Button>{\" \"}\n            <Button\n              className=\"custom-btn\"\n              id=\"btnAddCred\"\n              onClick={(e) => confirmAddCred(e)}\n              variant=\"secondary\"\n            >\n              Adicionar Crédito\n              <img src={AddMoneyPic} alt=\"search arrow\" />\n            </Button>{\" \"}\n            <Button\n              className=\"custom-btn \"\n              id=\"btnZeraCred\"\n              onClick={(e) => confirmZeraCred(e)}\n              variant=\"success\"\n            >\n              Zerar Crédito\n              <img src={EraseMoney} alt=\"search arrow\" />\n            </Button>{\" \"}\n          </div>\n        </div>\n\n        <div className=\"body-wrapper\">\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/kenzo/Desktop/rgb-wallet/web/src/components/Header/index.js",["65","66","67","68"],"import React, { ChangeEvent, FormEvent, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { Link } from \"react-router-dom\";\n\nimport CornerLogo from \"../../assets/images/corner-logo.svg\";\nimport CornerArrow from \"../../assets/images/corner-arrow-left.svg\";\n\nimport \"./styles.css\";\n\nasync function confirmExit(e) {\n  Swal.fire({\n    title: \"Vai vazar?\",\n    text: \"Veja se terminou o que veio aqui fazer!\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Fui!\",\n    cancelButtonText: \"Nem!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      Swal.fire(\"Tchau!\", \"Até a próxima\", \"success\");\n\n      e.preventDefault();\n    }\n  });\n\n  console.log(\"ASSAS\");\n}\n\nexport default function Header() {\n  // const [name, setName] = useState(\"\"); // MUDAR ASSIM QUE ESTIVER FUNCIONANDO!\n  // const [is_admin, setIsAdmin] = useState(false);\n\n  // TESTING\n  const [name, setName] = useState(\"Teste\"); // MUDAR ASSIM QUE ESTIVER FUNCIONANDO!\n  const [is_admin, setIsAdmin] = useState(true);\n\n  return (\n    <div className=\"header-wrapper\">\n      <div className=\"top-icons\">\n        <Link onClick={(e) => confirmExit(e)} to=\"/\" className=\"exit-app\">\n          <img src={CornerArrow} id=\"arrow\" alt=\"arrow de retorno\" />\n        </Link>\n\n        <img src={CornerLogo} alt=\"logo RGBWallet\" />\n      </div>\n      <div className=\"hello-user\">\n        <h1>{!is_admin ? `Olá, ${name}` : \"Painel de Usuários\"}</h1>\n        <p>\n          {!is_admin\n            ? \"Esta é sua carteira virtual\"\n            : \"Consulte e altere os dados dos usuários\"}\n        </p>\n      </div>\n    </div>\n  );\n}\n","/home/kenzo/Desktop/rgb-wallet/web/src/components/CustomToggle/index.js",[],"/home/kenzo/Desktop/rgb-wallet/web/src/components/ModalForm/index.js",["69","70","71"],"/home/kenzo/Desktop/rgb-wallet/web/src/components/UserCard/index.js",["72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87"],"import React, { ChangeEvent, FormEvent, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { Link } from \"react-router-dom\";\n\nimport CustomToggle from \"../CustomToggle/index\";\nimport ContextAwareToggle from \"../ContextAwareToggle/index\";\n\nimport {\n  Button,\n  Card,\n  ListGroup,\n  ListGroupItem,\n  Accordion,\n  Form,\n} from \"react-bootstrap/\";\n\nimport ProfilePic from \"../../assets/images/profile-icon.svg\";\nimport TrashIcon from \"../../assets/images/trash-icon.svg\";\nimport TrueIcon from \"../../assets/images/true-icon.svg\";\nimport FalseIcon from \"../../assets/images/false-icon.svg\";\n\nimport { FaAngleDown } from \"react-icons/fa\";\n\nimport \"./styles.css\";\n\nasync function handleUserUpdate(e) {\n  e.preventDefault();\n\n  try {\n    // const response = await api\n    console.log(\"only a sketch of the handle the update user form\");\n  } catch (e) {\n    await Swal.fire(\"Erro no Login\", `Detalhes=${e.message}`, \"error\");\n  }\n}\n\nasync function confirmDelete(e, name) {\n  Swal.fire({\n    title: `Deletar Usuário`,\n    text: `Deseja mesmo deletar ${name}?`,\n    icon: \"error\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Sim!\",\n    cancelButtonText: \"Cancelar!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      Swal.fire(\n        `Usuário deletado com sucesso!`,\n        `Tchau, '${name}'...`,\n        \"success\"\n      );\n    }\n  });\n\n  console.log(\"ASSAS\");\n}\n\nexport default function UserCard() {\n  const [id, setId] = useState(1);\n  const [name, setName] = useState(\"Fulano da Silva\");\n  const [userName, setUserName] = useState(\"Fulanex2593\");\n  const [isExecutingProj, setIsExecutingProj] = useState(false); // MUDAR ASSIM QUE ESTIVER FUNCIONANDO!\n  const [didSellProj, setDidSellProj] = useState(true);\n  const [weeklyHours, setWeeklyHours] = useState(1000);\n\n  return (\n    <div id=\"custom-card\">\n      <div className=\"btn-delete-container\">\n        <p>ID: {id}</p>\n        <Button\n          className=\"custom-btn \"\n          id=\"btn-delete\"\n          onClick={(e) => confirmDelete(e, name)}\n        >\n          <img src={TrashIcon} alt=\"trash icon\" />\n        </Button>\n      </div>\n\n      <div className=\"card-header\">\n        <div className=\"current-balance\">\n          <p>Fulano Da Silva</p>\n          <h1>R$ 2000,00</h1>\n        </div>\n        <img src={ProfilePic} />\n      </div>\n\n      <div className=\"card-body\">\n        <Accordion defaultActiveKey=\"0\">\n          <CustomToggle eventKey=\"1\">\n            Detalhes <FaAngleDown />\n          </CustomToggle>\n\n          <Accordion.Collapse eventKey=\"1\">\n            <div className=\"card-details\">\n              <Form onSubmit={(e) => handleUserUpdate(e)}>\n                <Form.Group controlId=\"formFullName\">\n                  <Form.Label className=\"custom-card-lbl\">\n                    Nome Completo\n                  </Form.Label>\n                  <Form.Control\n                    className=\"custom-card-input\"\n                    type=\"text\"\n                    placeholder={name}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formFullUsername\">\n                  <Form.Label className=\"custom-card-lbl\">\n                    Nome de Usuário\n                  </Form.Label>\n                  <Form.Control\n                    className=\"custom-card-input\"\n                    type=\"text\"\n                    placeholder={userName}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formDidSellProj\">\n                  <Form.Label className=\"custom-card-lbl\">\n                    Venda de projeto nesse mês?\n                  </Form.Label>\n                  <img src={didSellProj ? TrueIcon : FalseIcon} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formIsExecProj\">\n                  <Form.Label className=\"custom-card-lbl\">\n                    Algum projeto em execução?\n                  </Form.Label>\n                  <img src={isExecutingProj ? TrueIcon : FalseIcon} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formHowManyWeeks\">\n                  <Form.Label className=\"custom-card-lbl\">\n                    Quantas semanas cumpriu 10h/semanais?\n                  </Form.Label>\n                  <Form.Control\n                    className=\"custom-card-input\"\n                    type=\"number\"\n                    placeholder={weeklyHours}\n                  />\n                </Form.Group>\n\n                <div className=\"form-buttons\">\n                  <Button\n                    // Disable if one of the fields is untouched\n                    // {disabled}\n                    className=\"custom-card-btn\"\n                    variant=\"primary\"\n                    type=\"submit\"\n                  >\n                    Salvar\n                  </Button>{\" \"}\n                </div>\n              </Form>\n            </div>\n          </Accordion.Collapse>\n        </Accordion>\n      </div>\n    </div>\n  );\n}\n","/home/kenzo/Desktop/rgb-wallet/web/src/components/ContextAwareToggle/index.js",["88","89"],"import { React, useContext } from \"react\";\nimport \"./styles.css\";\n\nimport { Button, useAccordionToggle, AccordionContext } from \"react-bootstrap/\";\n\nexport default function ContextAwareToggle({ children, eventKey, callback }) {\n  const currentEventKey = useContext(AccordionContext);\n\n  const decoratedOnClick = useAccordionToggle(\n    eventKey,\n    () => callback && callback(eventKey)\n  );\n\n  const isCurrentEventKey = currentEventKey === eventKey;\n\n  return (\n    <button\n      type=\"button\"\n      className=\"custom-aware-toggle-btn\"\n      onClick={decoratedOnClick}\n    >\n      {children}\n    </button>\n  );\n}\n",{"ruleId":"90","severity":1,"message":"91","line":2,"column":40,"nodeType":"92","messageId":"93","endLine":2,"endColumn":48},{"ruleId":"94","severity":1,"message":"95","line":15,"column":31,"nodeType":"96","endLine":15,"endColumn":36},{"ruleId":"90","severity":1,"message":"97","line":1,"column":27,"nodeType":"92","messageId":"93","endLine":1,"endColumn":36},{"ruleId":"90","severity":1,"message":"98","line":14,"column":17,"nodeType":"92","messageId":"93","endLine":14,"endColumn":25},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"90","severity":1,"message":"103","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":13},{"ruleId":"90","severity":1,"message":"104","line":3,"column":17,"nodeType":"92","messageId":"93","endLine":3,"endColumn":25},{"ruleId":"90","severity":1,"message":"97","line":3,"column":27,"nodeType":"92","messageId":"93","endLine":3,"endColumn":36},{"ruleId":"105","severity":1,"message":"106","line":86,"column":15,"nodeType":"107","endLine":86,"endColumn":43},{"ruleId":"90","severity":1,"message":"104","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":25},{"ruleId":"90","severity":1,"message":"97","line":1,"column":27,"nodeType":"92","messageId":"93","endLine":1,"endColumn":36},{"ruleId":"90","severity":1,"message":"108","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":28},{"ruleId":"90","severity":1,"message":"109","line":1,"column":30,"nodeType":"92","messageId":"93","endLine":1,"endColumn":39},{"ruleId":"90","severity":1,"message":"110","line":36,"column":16,"nodeType":"92","messageId":"93","endLine":36,"endColumn":23},{"ruleId":"90","severity":1,"message":"111","line":37,"column":20,"nodeType":"92","messageId":"93","endLine":37,"endColumn":30},{"ruleId":"90","severity":1,"message":"112","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":15},{"ruleId":"90","severity":1,"message":"113","line":2,"column":16,"nodeType":"92","messageId":"93","endLine":2,"endColumn":22},{"ruleId":"90","severity":1,"message":"114","line":2,"column":23,"nodeType":"92","messageId":"93","endLine":2,"endColumn":41},{"ruleId":"90","severity":1,"message":"108","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":28},{"ruleId":"90","severity":1,"message":"109","line":1,"column":30,"nodeType":"92","messageId":"93","endLine":1,"endColumn":39},{"ruleId":"90","severity":1,"message":"115","line":3,"column":10,"nodeType":"92","messageId":"93","endLine":3,"endColumn":14},{"ruleId":"90","severity":1,"message":"116","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":26},{"ruleId":"90","severity":1,"message":"117","line":10,"column":3,"nodeType":"92","messageId":"93","endLine":10,"endColumn":7},{"ruleId":"90","severity":1,"message":"118","line":11,"column":3,"nodeType":"92","messageId":"93","endLine":11,"endColumn":12},{"ruleId":"90","severity":1,"message":"119","line":12,"column":3,"nodeType":"92","messageId":"93","endLine":12,"endColumn":16},{"ruleId":"90","severity":1,"message":"120","line":61,"column":14,"nodeType":"92","messageId":"93","endLine":61,"endColumn":19},{"ruleId":"90","severity":1,"message":"110","line":62,"column":16,"nodeType":"92","messageId":"93","endLine":62,"endColumn":23},{"ruleId":"90","severity":1,"message":"121","line":63,"column":20,"nodeType":"92","messageId":"93","endLine":63,"endColumn":31},{"ruleId":"90","severity":1,"message":"122","line":64,"column":27,"nodeType":"92","messageId":"93","endLine":64,"endColumn":45},{"ruleId":"90","severity":1,"message":"123","line":65,"column":23,"nodeType":"92","messageId":"93","endLine":65,"endColumn":37},{"ruleId":"90","severity":1,"message":"124","line":66,"column":23,"nodeType":"92","messageId":"93","endLine":66,"endColumn":37},{"ruleId":"125","severity":1,"message":"126","line":86,"column":9,"nodeType":"107","endLine":86,"endColumn":33},{"ruleId":"125","severity":1,"message":"126","line":124,"column":19,"nodeType":"107","endLine":124,"endColumn":67},{"ruleId":"125","severity":1,"message":"126","line":131,"column":19,"nodeType":"107","endLine":131,"endColumn":71},{"ruleId":"90","severity":1,"message":"113","line":4,"column":10,"nodeType":"92","messageId":"93","endLine":4,"endColumn":16},{"ruleId":"90","severity":1,"message":"127","line":14,"column":9,"nodeType":"92","messageId":"93","endLine":14,"endColumn":26},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useEffect' is defined but never used.","'setSaldo' is assigned a value but never used.","no-native-reassign",["128"],"no-negated-in-lhs",["129"],"'axios' is defined but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ChangeEvent' is defined but never used.","'FormEvent' is defined but never used.","'setName' is assigned a value but never used.","'setIsAdmin' is assigned a value but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","'useAccordionToggle' is defined but never used.","'Link' is defined but never used.","'ContextAwareToggle' is defined but never used.","'Card' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'setId' is assigned a value but never used.","'setUserName' is assigned a value but never used.","'setIsExecutingProj' is assigned a value but never used.","'setDidSellProj' is assigned a value but never used.","'setWeeklyHours' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'isCurrentEventKey' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]