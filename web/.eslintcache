[{"/home/kenzo/Desktop/rgb-wallet/web/src/index.js":"1","/home/kenzo/Desktop/rgb-wallet/web/src/App.js":"2","/home/kenzo/Desktop/rgb-wallet/web/src/routes.js":"3","/home/kenzo/Desktop/rgb-wallet/web/src/pages/User/index.js":"4","/home/kenzo/Desktop/rgb-wallet/web/src/pages/Login/index.js":"5","/home/kenzo/Desktop/rgb-wallet/web/src/pages/Admin/index.js":"6","/home/kenzo/Desktop/rgb-wallet/web/src/components/Header/index.js":"7","/home/kenzo/Desktop/rgb-wallet/web/src/components/CustomToggle/index.js":"8","/home/kenzo/Desktop/rgb-wallet/web/src/components/UserCard/index.js":"9","/home/kenzo/Desktop/rgb-wallet/web/src/components/Container/index.js":"10","/home/kenzo/Desktop/rgb-wallet/web/src/components/TriggerButton/index.js":"11","/home/kenzo/Desktop/rgb-wallet/web/src/components/Modal/index.js":"12","/home/kenzo/Desktop/rgb-wallet/web/src/components/Form/index.js":"13","/home/kenzo/Desktop/rgb-wallet/web/src/services/AuthService.js":"14","/home/kenzo/Desktop/rgb-wallet/web/src/components/ToggleButton/index.js":"15"},{"size":846,"mtime":1612112427299,"results":"16","hashOfConfig":"17"},{"size":246,"mtime":1612037735567,"results":"18","hashOfConfig":"17"},{"size":1108,"mtime":1612115345593,"results":"19","hashOfConfig":"17"},{"size":3346,"mtime":1612115262431,"results":"20","hashOfConfig":"17"},{"size":3751,"mtime":1612114515059,"results":"21","hashOfConfig":"17"},{"size":5086,"mtime":1612111834691,"results":"22","hashOfConfig":"17"},{"size":1933,"mtime":1612114964103,"results":"23","hashOfConfig":"17"},{"size":563,"mtime":1612040737565,"results":"24","hashOfConfig":"17"},{"size":4962,"mtime":1612054956949,"results":"25","hashOfConfig":"17"},{"size":1455,"mtime":1612047915556,"results":"26","hashOfConfig":"17"},{"size":435,"mtime":1612048869786,"results":"27","hashOfConfig":"17"},{"size":1244,"mtime":1612111487885,"results":"28","hashOfConfig":"17"},{"size":1811,"mtime":1612111364086,"results":"29","hashOfConfig":"17"},{"size":815,"mtime":1612112275057,"results":"30","hashOfConfig":"17"},{"size":700,"mtime":1612057720587,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1ta0kj",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/kenzo/Desktop/rgb-wallet/web/src/index.js",[],["67","68"],"/home/kenzo/Desktop/rgb-wallet/web/src/App.js",[],"/home/kenzo/Desktop/rgb-wallet/web/src/routes.js",["69"],"/home/kenzo/Desktop/rgb-wallet/web/src/pages/User/index.js",["70","71","72"],"/home/kenzo/Desktop/rgb-wallet/web/src/pages/Login/index.js",["73","74","75","76","77"],"/home/kenzo/Desktop/rgb-wallet/web/src/pages/Admin/index.js",["78","79"],"import React, { useState, useEffect } from \"react\";\nimport Swal from \"sweetalert2\";\n\nimport \"./styles.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport MagnifyingGlass from \"../../assets/images/magnifying-glass-1.svg\";\nimport AddMoneyPic from \"../../assets/images/adicionar-credito.svg\";\nimport EraseMoney from \"../../assets/images/no-money.svg\";\n\nimport Header from \"../../components/Header/index\";\nimport UserCard from \"../../components/UserCard/index\";\n\nimport { Form, InputGroup, FormControl, Button } from \"react-bootstrap/\";\nimport { Container } from \"../../components/Container\";\n\n/**\n * onSubmit function for addUserForm\n * @param {*} event\n */\nfunction addUserOnSubmit(event) {\n  event.preventDefault(event);\n  console.log(event.target.name.value);\n  console.log(event.target.userName.value);\n  // console.log(event.target.didSellProj.value.checked);\n  // console.log(event.target.isExecutingProj.checked);\n  console.log(event.target.weeklyHours.value);\n}\n\n/**\n * Adicionar Credito button alert\n * @param {*} e\n */\nasync function confirmAddCred(e) {\n  Swal.fire({\n    allowOutsideClick: false,\n    title: \"Adicionar Crédito\",\n    html: `<input type=\"number\" id=\"credito\" class=\"swal2-input\"  placeholder=\"Insira um valor em R$\">\n          `,\n    showCancelButton: true,\n    confirmButtonText: \"Adicionar!\",\n    cancelButtonText: \"Nem!\",\n    cancelButtonColor: \"#d33\",\n    focusConfirm: false,\n    preConfirm: () => {\n      const credito = Swal.getPopup().querySelector(\"#credito\").value;\n      if (!credito) {\n        Swal.showValidationMessage(`Por Favor insira um valor!`);\n      }\n      return { credito: credito };\n    },\n  }).then((result) => {\n    if (result.isConfirmed) {\n      Swal.fire({\n        title: \"Crédito Adicionado com Sucesso!\",\n        text: \"Todos os usuários receberão a quantia escolhida\",\n        imageUrl:\n          \"https://i.pinimg.com/originals/7e/f0/3b/7ef03bc1737fdcd05cbd8f02e9b0be86.gif\",\n        imageWidth: 400,\n        imageHeight: 200,\n        imageAlt: \"Burning Money...\",\n      });\n\n      //  this.myMethod(); // this should execute now\n    }\n  });\n}\n\n/**\n * Zerar credito confirmation button Alert\n * @param {*} e\n */\nasync function confirmZeraCred(e) {\n  Swal.fire({\n    allowOutsideClick: false,\n    title: `Zerar Crédito`,\n    text: `Deseja mesmo zerar o crédito de TODOS os usuários?`,\n    icon: \"error\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Sim!\",\n    cancelButtonText: \"Cancelar!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      Swal.fire({\n        title: \"Crédito Zerado com Sucesso!\",\n        text: \"LET IT BUUURN!!!!\",\n        imageUrl:\n          \"https://thumbs.gfycat.com/CheerfulEllipticalEstuarinecrocodile-max-1mb.gif\",\n        imageWidth: 400,\n        imageHeight: 200,\n        imageAlt: \"Burning Money...\",\n      });\n\n      //  this.myMethod(); // this should execute now\n    }\n  });\n}\n\nexport default function Admin() {\n  return (\n    <div id=\"admin-page\">\n      <div className=\"content-wrapper\">\n        <Header />\n        {/* Make search bar a component too? */}\n        <div className=\"navbar-wrapper sticky\">\n          <div className=\"search-bar\">\n            <Form inline>\n              <InputGroup>\n                <FormControl\n                  className=\"custom-input\"\n                  placeholder=\"Pesquisar...\"\n                  aria-label=\"Username\"\n                  aria-describedby=\"basic-addon1\"\n                />\n              </InputGroup>\n              <Button className=\"custom-btn \" id=\"btn_search\" type=\"submit\">\n                <img src={MagnifyingGlass} alt=\"search arrow\" />\n              </Button>\n            </Form>\n          </div>\n\n          <div className=\"control-buttons\">\n            <Container\n              triggerText=\"Cadastrar Usuário\"\n              id=\"btnCadUser\"\n              onSubmit={addUserOnSubmit}\n            ></Container>\n            <Button\n              className=\"custom-btn\"\n              id=\"btnAddCred\"\n              onClick={(e) => confirmAddCred(e)}\n              variant=\"secondary\"\n            >\n              Adicionar Crédito\n              <img src={AddMoneyPic} alt=\"search arrow\" />\n            </Button>{\" \"}\n            <Button\n              className=\"custom-btn \"\n              id=\"btnZeraCred\"\n              onClick={(e) => confirmZeraCred(e)}\n              variant=\"success\"\n            >\n              Zerar Crédito\n              <img src={EraseMoney} alt=\"search arrow\" />\n            </Button>{\" \"}\n          </div>\n        </div>\n\n        <div className=\"body-wrapper\">\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n          <UserCard />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/kenzo/Desktop/rgb-wallet/web/src/components/Header/index.js",["80","81","82","83","84"],"/home/kenzo/Desktop/rgb-wallet/web/src/components/CustomToggle/index.js",[],"/home/kenzo/Desktop/rgb-wallet/web/src/components/UserCard/index.js",["85","86","87","88","89","90","91","92","93","94","95","96","97","98","99"],"import React, { ChangeEvent, FormEvent, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { Link } from \"react-router-dom\";\n\nimport CustomToggle from \"../CustomToggle/index\";\n\nimport {\n  Button,\n  Card,\n  ListGroup,\n  ListGroupItem,\n  Accordion,\n  Form,\n} from \"react-bootstrap/\";\n\nimport ProfilePic from \"../../assets/images/profile-icon.svg\";\nimport TrashIcon from \"../../assets/images/trash-icon.svg\";\nimport TrueIcon from \"../../assets/images/true-icon.svg\";\nimport FalseIcon from \"../../assets/images/false-icon.svg\";\n\nimport { FaAngleDown } from \"react-icons/fa\";\n\nimport \"./styles.css\";\n\nasync function handleUserUpdate(e) {\n  e.preventDefault();\n\n  try {\n    // const response = await api\n    console.log(\"only a sketch of the handle the update user form\");\n  } catch (e) {\n    await Swal.fire(\"Erro no Login\", `Detalhes=${e.message}`, \"error\");\n  }\n}\n\nasync function confirmDelete(e, name) {\n  Swal.fire({\n    title: `Deletar Usuário`,\n    text: `Deseja mesmo deletar ${name}?`,\n    icon: \"error\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Sim!\",\n    cancelButtonText: \"Cancelar!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      Swal.fire(\n        `Usuário deletado com sucesso!`,\n        `Tchau, '${name}'...`,\n        \"success\"\n      );\n    }\n  });\n\n  console.log(\"ASSAS\");\n}\n\nexport default function UserCard() {\n  const [id, setId] = useState(1);\n  const [name, setName] = useState(\"Fulano da Silva\");\n  const [userName, setUserName] = useState(\"Fulanex2593\");\n  const [didSellProj, setDidSellProj] = useState(true);\n  const [isExecutingProj, setIsExecutingProj] = useState(false); // MUDAR ASSIM QUE ESTIVER FUNCIONANDO!\n  const [weeklyHours, setWeeklyHours] = useState(1000);\n\n  return (\n    <div id=\"custom-card\">\n      <div className=\"btn-delete-container\">\n        <p>ID: {id}</p>\n        <Button\n          className=\"custom-btn \"\n          id=\"btn-delete\"\n          onClick={(e) => confirmDelete(e, name)}\n        >\n          <img src={TrashIcon} alt=\"trash icon\" />\n        </Button>\n      </div>\n\n      <div className=\"card-header\">\n        <div className=\"current-balance\">\n          <p>Fulano Da Silva</p>\n          <h1>R$ 2000,00</h1>\n        </div>\n        <img src={ProfilePic} />\n      </div>\n\n      <div className=\"card-body\">\n        <Accordion defaultActiveKey=\"0\">\n          <CustomToggle eventKey=\"1\">\n            Detalhes <FaAngleDown />\n          </CustomToggle>\n\n          <Accordion.Collapse eventKey=\"1\">\n            <div className=\"card-details\">\n              <Form onSubmit={(e) => handleUserUpdate(e)}>\n                <Form.Group controlId=\"formFullName\">\n                  <Form.Label className=\"custom-card-lbl\">\n                    Nome Completo\n                  </Form.Label>\n                  <Form.Control\n                    className=\"custom-card-input\"\n                    type=\"text\"\n                    placeholder={name}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formFullUsername\">\n                  <Form.Label className=\"custom-card-lbl\">\n                    Nome de Usuário\n                  </Form.Label>\n                  <Form.Control\n                    className=\"custom-card-input\"\n                    type=\"text\"\n                    placeholder={userName}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formDidSellProj\">\n                  <Form.Label className=\"custom-card-lbl\">\n                    Venda de projeto nesse mês?\n                  </Form.Label>\n                  <img src={didSellProj ? TrueIcon : FalseIcon} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formIsExecProj\">\n                  <Form.Label className=\"custom-card-lbl\">\n                    Algum projeto em execução?\n                  </Form.Label>\n                  <img src={isExecutingProj ? TrueIcon : FalseIcon} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formHowManyWeeks\">\n                  <Form.Label className=\"custom-card-lbl\">\n                    Quantas semanas cumpriu 10h/semanais?\n                  </Form.Label>\n                  <Form.Control\n                    className=\"custom-card-input\"\n                    type=\"number\"\n                    placeholder={weeklyHours}\n                  />\n                </Form.Group>\n\n                <div className=\"form-buttons\">\n                  <Button\n                    // Disable if one of the fields is untouched\n                    // {disabled}\n                    className=\"custom-card-btn\"\n                    variant=\"primary\"\n                    type=\"submit\"\n                  >\n                    Salvar\n                  </Button>{\" \"}\n                </div>\n              </Form>\n            </div>\n          </Accordion.Collapse>\n        </Accordion>\n      </div>\n    </div>\n  );\n}\n","/home/kenzo/Desktop/rgb-wallet/web/src/components/Container/index.js",[],"/home/kenzo/Desktop/rgb-wallet/web/src/components/TriggerButton/index.js",[],"/home/kenzo/Desktop/rgb-wallet/web/src/components/Modal/index.js",[],"/home/kenzo/Desktop/rgb-wallet/web/src/components/Form/index.js",["100"],"import \"./styles.css\";\nimport React from \"react\";\nimport { ToggleButton } from \"../ToggleButton\";\nimport Switch from \"react-switch\";\n\nexport const Form = ({ onSubmit }) => {\n  return (\n    <div className=\"cad-form-container\">\n      <h1>Cadastrar Usuário</h1>\n      <form onSubmit={onSubmit}>\n        {/* Nome Completo */}\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Nome Completo</label>\n          <input required className=\"form-control\" id=\"name\" />\n        </div>\n        {/* Nome de Usuário */}\n        <div className=\"form-group\">\n          <label htmlFor=\"userName\">Nome de Usuário</label>\n          <input required className=\"form-control\" id=\"userName\" />\n        </div>\n        {/* Vendeu algum projeto esse mês? */}\n        <div className=\"form-group\">\n          <label htmlFor=\"didSellProj\">Vendeu algum projeto esse mês?</label>\n          <ToggleButton id=\"didSellProj\" />\n        </div>\n        {/* Está executando algum projeto? */}\n        <div className=\"form-group\">\n          <label htmlFor=\"isExecutingProj\">\n            Está executando algum projeto?\n          </label>\n          <ToggleButton id=\"isExecutingProj\" />\n        </div>\n        {/* Quantas semanas cumpriu as 10 horas semanais? */}\n        <div className=\"form-group\">\n          <label htmlFor=\"weeklyHours\">\n            Quantas semanas cumpriu as 10 horas semanais?\n          </label>\n          <input\n            required\n            type=\"number\"\n            className=\"form-control\"\n            id=\"weeklyHours\"\n          />\n        </div>\n\n        {/* Salvar Cadastro */}\n        <div className=\"form-group-btn\">\n          <button className=\"form-custom-btn\" type=\"submit\">\n            Salvar Cadastro\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\nexport default Form;\n","/home/kenzo/Desktop/rgb-wallet/web/src/services/AuthService.js",["101"],"import axios from \"axios\"; //import axios to make\n\nconst logInUser = async (userLogin, password) => {\n  try {\n    const res = await axios.post(\"/\", { login: userLogin, password });\n    const { token, login } = res.data;\n    localStorage.setItem(\"user\", JSON.stringify({ login, token }));\n    return true;\n  } catch (error) {\n    console.log(error);\n    localStorage.removeItem(\"user\");\n    return false;\n  }\n};\n\nconst logOut = () => {\n  localStorage.removeItem(\"user\");\n  localStorage.clear();\n  axios.defaults.headers.common.Authorization = null;\n};\n\nconst isLogged = () => {\n  let user = localStorage.getItem(\"user\");\n  if (!user) return false;\n\n  user = JSON.parse(user);\n  axios.defaults.headers.common.Authorization = `Bearer ${user.token}`;\n\n  return user;\n};\n\nexport default { isLogged, logInUser, logOut };\n","/home/kenzo/Desktop/rgb-wallet/web/src/components/ToggleButton/index.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":33,"column":31,"nodeType":"108","endLine":33,"endColumn":36},{"ruleId":"109","severity":1,"message":"110","line":16,"column":17,"nodeType":"111","messageId":"112","endLine":16,"endColumn":25},{"ruleId":"109","severity":1,"message":"113","line":19,"column":10,"nodeType":"111","messageId":"112","endLine":19,"endColumn":18},{"ruleId":"109","severity":1,"message":"114","line":20,"column":10,"nodeType":"111","messageId":"112","endLine":20,"endColumn":18},{"ruleId":"109","severity":1,"message":"115","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":13},{"ruleId":"109","severity":1,"message":"116","line":6,"column":10,"nodeType":"111","messageId":"112","endLine":6,"endColumn":14},{"ruleId":"109","severity":1,"message":"117","line":30,"column":20,"nodeType":"111","messageId":"112","endLine":30,"endColumn":31},{"ruleId":"109","severity":1,"message":"118","line":31,"column":20,"nodeType":"111","messageId":"112","endLine":31,"endColumn":31},{"ruleId":"119","severity":1,"message":"120","line":114,"column":15,"nodeType":"121","endLine":114,"endColumn":48},{"ruleId":"109","severity":1,"message":"122","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"123","line":1,"column":27,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},{"ruleId":"109","severity":1,"message":"124","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":28},{"ruleId":"109","severity":1,"message":"125","line":1,"column":30,"nodeType":"111","messageId":"112","endLine":1,"endColumn":39},{"ruleId":"109","severity":1,"message":"116","line":4,"column":10,"nodeType":"111","messageId":"112","endLine":4,"endColumn":14},{"ruleId":"109","severity":1,"message":"126","line":18,"column":16,"nodeType":"111","messageId":"112","endLine":18,"endColumn":23},{"ruleId":"109","severity":1,"message":"127","line":19,"column":20,"nodeType":"111","messageId":"112","endLine":19,"endColumn":30},{"ruleId":"109","severity":1,"message":"124","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":28},{"ruleId":"109","severity":1,"message":"125","line":1,"column":30,"nodeType":"111","messageId":"112","endLine":1,"endColumn":39},{"ruleId":"109","severity":1,"message":"116","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":14},{"ruleId":"109","severity":1,"message":"128","line":9,"column":3,"nodeType":"111","messageId":"112","endLine":9,"endColumn":7},{"ruleId":"109","severity":1,"message":"129","line":10,"column":3,"nodeType":"111","messageId":"112","endLine":10,"endColumn":12},{"ruleId":"109","severity":1,"message":"130","line":11,"column":3,"nodeType":"111","messageId":"112","endLine":11,"endColumn":16},{"ruleId":"109","severity":1,"message":"131","line":60,"column":14,"nodeType":"111","messageId":"112","endLine":60,"endColumn":19},{"ruleId":"109","severity":1,"message":"126","line":61,"column":16,"nodeType":"111","messageId":"112","endLine":61,"endColumn":23},{"ruleId":"109","severity":1,"message":"117","line":62,"column":20,"nodeType":"111","messageId":"112","endLine":62,"endColumn":31},{"ruleId":"109","severity":1,"message":"132","line":63,"column":23,"nodeType":"111","messageId":"112","endLine":63,"endColumn":37},{"ruleId":"109","severity":1,"message":"133","line":64,"column":27,"nodeType":"111","messageId":"112","endLine":64,"endColumn":45},{"ruleId":"109","severity":1,"message":"134","line":65,"column":23,"nodeType":"111","messageId":"112","endLine":65,"endColumn":37},{"ruleId":"135","severity":1,"message":"136","line":85,"column":9,"nodeType":"121","endLine":85,"endColumn":33},{"ruleId":"135","severity":1,"message":"136","line":123,"column":19,"nodeType":"121","endLine":123,"endColumn":67},{"ruleId":"135","severity":1,"message":"136","line":130,"column":19,"nodeType":"121","endLine":130,"endColumn":71},{"ruleId":"109","severity":1,"message":"137","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":14},{"ruleId":"138","severity":1,"message":"139","line":32,"column":1,"nodeType":"140","endLine":32,"endColumn":48},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'setSaldo' is assigned a value but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","'userName' is assigned a value but never used.","'axios' is defined but never used.","'Link' is defined but never used.","'setUserName' is assigned a value but never used.","'setPassword' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'ChangeEvent' is defined but never used.","'FormEvent' is defined but never used.","'setName' is assigned a value but never used.","'setIsAdmin' is assigned a value but never used.","'Card' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'setId' is assigned a value but never used.","'setDidSellProj' is assigned a value but never used.","'setIsExecutingProj' is assigned a value but never used.","'setWeeklyHours' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Switch' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]